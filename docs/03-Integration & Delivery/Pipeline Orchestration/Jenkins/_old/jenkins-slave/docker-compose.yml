version: '3.7'
services:
  android1:  # 这个 key 只是它在 docker-compose 内部的一个别名，在 docker 中不可用。
    container_name: android1  # 这个名字才是容器 在 docker 中的真正名称。
    image: image-registry.svc.local/jenkins/slave-android:latest  # 私有仓库，定制的 android 构建用基础镜像
    init: true  # 这个必须加上，否则僵尸进程无法回收，僵尸进程累积会导致系统卡顿
    environment:
      - TZ=Asia/Shanghai
    command: -url http://jenkins.ci.svc.local -workDir=/home/jenkins/ <secret> android1
    restart: always
    networks:
      - jenkins-slave

  general1:
    container_name: general1
    image: image-registry.svc.local/jenkins/slave-base:latest  # 私有仓库，定制的通用基础镜像
    init: true  # 这个必须加上，否则僵尸进程无法回收，僵尸进程累积会导致系统卡顿
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # 用于在容器内部构建 docker 镜像
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker

      # 这几个命令行工具，手动下载下来，映射到容器内，加快部署速度。（否则每次构建都下载，github 网速感人）
      - ./cli/kubectl:/usr/local/bin/kubectl  # k8s 客户端
      - ./cli/terraform:/usr/bin/terraform    # terraform
      - ./cli/.terraform:/home/jenkins/.terraform
    command: -url http://jenkins.ci.svc.local -workDir=/home/jenkins/ <secret> general1
    user: root
    restart: always
    networks:
      - jenkins-slave


networks:
  jenkins-slave:  # 这个 key 只是它在 docker-compose 内部的一个别名，在 docker 中不可用。
    name: jenkins-slave  # 这个名字才是新 network 在 docker 中的真正名称。