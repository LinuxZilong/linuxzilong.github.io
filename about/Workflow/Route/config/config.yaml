##########################################################################
#                               订阅地址                                 #
##########################################################################
proxy-providers:
  # https://proxy-provider-converter.vercel.app/
  mojie:
    type: http
    url: http://archlinux.lan:38324/download/mojie?target=ClashMeta
    proxy: DIRECT #经过指定代理进行下载/更新
    interval: 3600
    health-check:
      enable: true
      interval: 600
      lazy: true
      url: http://www.gstatic.com/generate_204
  ssrdog:
    type: http
    url: http://archlinux.lan:38324/download/ssrdog?target=ClashMeta
    proxy: DIRECT #经过指定代理进行下载/更新
    interval: 3600
    health-check:
      enable: true
      interval: 600
      lazy: true
      url: http://www.gstatic.com/generate_204
##########################################################################
#                               服务配置                                 #
##########################################################################
mode: rule # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）
mixed-port: 7890 # HTTP(S) and SOCKS5 共用端口
port: 7891 # HTTP 代理端口
socks-port: 7892 # SOCKS5 代理端口
redir-port: 7893 # Linux 和 macOS 的 redir 透明代理端口 (重定向 TCP 和 TProxy UDP 流量)
tproxy-port: 7894 # Linux 的透明代理端口（适用于 TProxy TCP 和 TProxy UDP 流量)

log-level: info # silent / info / warning / error / debug
allow-lan: true # 允许局域网的连接（共享代理）
authentication:
  - vkmJQ7:hheZVs45ePgdbn
ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
udp: true # 是否允许 UDP 通过代理，默认为 false

unified-delay: true # 开启统一延迟时，会进行两次延迟测试，以消除连接握手等带来的不同类型节点的延迟差异，可选值 true/false
tcp-concurrent: true # TCP 并发
find-process-mode: "off" # strict|off 路由器推荐 off 关闭进程匹配
global-client-fingerprint: random # 随机全局客户端指纹

profile:
  store-selected: true # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: true # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

external-controller: :9090 # clash 的 RESTful API 监听地址
# external-controller-tls: :9443
# tls:
#   certificate: string # 证书 PEM 格式，或者 证书的路径
#   private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径
external-ui: metacubexd-gh-pages
external-ui-url: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
secret: hkvmQ7ZPgdbnheJVs45e

geodata-mode: false # 默认值 false
geodata-loader: memconservative # GEO 文件加载模式，standard：标准加载器 memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geo-auto-update: true # 自动更新 GEO
geo-update-interval: 24 # 更新间隔，单位为小时
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  # "geoip": "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat",
  # "geosite": "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat",
  # "mmdb": "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb",
  # "asn": "https://mirror.ghproxy.com/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
# https://github.com/misakaio/chnroutes2/tree/master
# routing-mark: 6666
tun:
  enable: false
  stack: mixed # tun 模式堆栈,可用值：system/gvisor/mixed
  device: Mihomo
  mtu: 1500
  dns-hijack:
    - "any:53"
  auto-route: true # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡
  auto-redirect: false
  auto-detect-interface: true # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  strict-route: true

# DNS 服务器和建立连接时的 静态 Hosts, 仅在 dns.enhanced-mode 模式为 redir-host 生效
# 支持通配符域名 (例如: *.clash.dev, *.foo.*.example.com )
# 不使用通配符的域名优先级高于使用通配符的域名 (例如: foo.example.com > *.example.com > .example.com )
# hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'
# 'dnslog.cn: 47.244.138.18'
# unified-delay: true
# dnslog.cn: 47.244.138.18
# DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭)
dns:
  enable: true
  prefer-h3: true
  # 对于支持 http3 的 Doh 会启动并发查询，如果对方支持，速度更快
  # dns over HTTP3 会比 doH 要快。
  ipv6: false # 当此选项为 false 时, AAAA 请求将返回空
  listen: :1053
  enhanced-mode: redir-host
  use-hosts: false
  use-system-hosts: false
  # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名
  # 仅填写 DNS 服务器的 IP 地址
  default-nameserver:
    - 8.8.8.8
    - 1.1.1.1
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # 并发查询获取最先返回的结果
  nameserver:
    - https://dns.google/dns-query
    - https://cloudflare-dns.com/dns-query
  nameserver-policy:
    "geosite:category-ads-all":
      - rcode://success
    "geosite:microsoft@cn,apple-cn,google-cn,category-games@cn,cn,private":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
# 域名嗅探
sniffer:
  enable: true
  force-dns-mapping: true # 对 redir-host 类型识别的流量进行强制嗅探
  parse-pure-ip: true # 对所有未获取到域名的流量进行强制嗅探
  override-destination: true # 是否使用嗅探结果作为实际访问，默认为 true
  # force-domain:  #需要强制嗅探的域名，默认只对IP嗅探
  #   - "+" #去掉注释后等于全局嗅探
  #   - "google.com"
  skip-domain:
    - +.lan
    - +.local
    - +.direct
    - +.msftconnecttest.com
    - +.msftncsi.com
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
  sniff:
    HTTP:
      ports:
        - 80
        - 8080-8880
      override-destination: true
    TLS:
      ports:
        - 443
        - 8443
    QUIC:
      ports:
        - 443
        - 8443

proxy-groups:
  - name: 手动切换
    type: select
    proxies:
      - 自动选择
      - 自动回退
      - 🇭🇰 Hong Kong
      - 🇨🇳 Taiwan
      - 🇸🇬 Singapore
      - 🇯🇵 Japan
      - 🇺🇸 United States
      - DIRECT
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300

  - name: 自动选择 # url-test（延迟最低节点）
    type: url-test
    include-all: true
    tolerance: 10
    udp: true

  - name: 自动回退
    type: fallback
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300

  # 地区分组
  - name: 🇭🇰 Hong Kong
    type: select
    include-all: true
    filter: "(?i)港|hk|hongkong|hong kong"
  - name: 🇨🇳 Taiwan
    type: select
    include-all: true
    filter: "(?i)台|tw|taiwan"
  - name: 🇯🇵 Japan
    type: select
    include-all: true
    filter: "(?i)日|jp|japan"
  - name: 🇺🇸 United States
    type: select
    include-all: true
    filter: (?i)美|us|unitedstates|united states|洛杉矶|圣何塞
  - name: 🇸🇬 Singapore
    type: select
    include-all: true
    filter: (?i)(新|sg|singapore)
  - name: 其它地区
    type: select
    include-all: true
    filter: (?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*

  # 应用分组
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: AI
    type: select
    proxies: &proxies
      - 手动切换
      - 🇭🇰 Hong Kong
      - 🇨🇳 Taiwan
      - 🇸🇬 Singapore
      - 🇯🇵 Japan
      - 🇺🇸 United States
    filter: (?i)gpt|openai
    include-all: true
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 国外网站
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 国际媒体
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 苹果服务
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 微软服务
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 谷歌服务
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 电报消息
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 推特消息
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 游戏平台
    type: select
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: Emby
    type: select
    include-all: true
    proxies: *proxies
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 广告拦截
    type: select
    proxies:
      - REJECT
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png
  - interval: 300
    url: http://1.1.1.1/generate_204
    max-failed-times: 3
    name: 兜底分流
    type: select
    proxies:
      - DIRECT
      - 手动切换
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

# 规则集
rule-providers:
  ChatGPT:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/G4free/clash-ruleset/main/ruleset/ChatGPT.yaml"
    path: ./ruleset/ChatGPT.yaml
    interval: 86400
  AD:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Reject.list
    path: ./rules/AD.list
  Apple:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Apple.list
    path: ./rules/Apple.list
  Google:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Google.list
    path: ./rules/Google.list
  YouTube:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/YouTube.list
    path: ./rules/YouTube.list
  Telegram:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Telegram.list
    path: ./rules/Telegram.list
  Twitter:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Twitter.list
    path: ./rules/Twitter.list
  Steam:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Steam.list
    path: ./rules/Steam.list
  Epic:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Epic.list
    path: ./rules/Epic.list
  AI:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/AI.list
    path: ./rules/AI.list
  Emby:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Emby.list
    path: ./rules/Emby.list
  Spotify:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Spotify.list
    path: ./rules/Spotify.list
  Bahamut:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Bahamut.list
    path: ./rules/Bahamut.list
  Netflix:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Netflix.list
    path: ./rules/Netflix.list
  Disney:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Disney.list
    path: ./rules/Disney.list
  PrimeVideo:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/PrimeVideo.list
    path: ./rules/PrimeVideo.list
  HBO:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/HBO.list
    path: ./rules/HBO.list
  OneDrive:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/OneDrive.list
    path: ./rules/OneDrive.list
  Github:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Github.list
    path: ./rules/Github.list
  Microsoft:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Microsoft.list
    path: ./rules/Microsoft.list
  Lan:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Lan.list
    path: ./rules/Lan.list
  ProxyGFW:
    type: http
    interval: 86400
    behavior: classical
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyGFW.list
    path: ./rules/ProxyGFW.list
rules:
  - RULE-SET,AD,广告拦截
  - GEOSITE,google,国外网站
  - GEOSITE,github,国外网站
  - GEOSITE,youtube,国外网站
  - GEOSITE,geolocation-!cn,国外网站
  - RULE-SET,ChatGPT,AI
  - RULE-SET,AI,AI
  - RULE-SET,Apple,苹果服务
  - RULE-SET,YouTube,谷歌服务
  - RULE-SET,Google,谷歌服务
  - RULE-SET,Telegram,电报消息
  - RULE-SET,Twitter,推特消息
  - RULE-SET,Steam,游戏平台
  - RULE-SET,Epic,游戏平台
  - RULE-SET,Emby,Emby
  - RULE-SET,Spotify,国际媒体
  - RULE-SET,Bahamut,国际媒体
  - RULE-SET,Netflix,国际媒体
  - RULE-SET,Disney,国际媒体
  - RULE-SET,PrimeVideo,国际媒体
  - RULE-SET,HBO,国际媒体
  - GEOSITE,onedrive,微软服务
  - GEOSITE,github,微软服务
  - GEOSITE,microsoft,微软服务
  - GEOSITE,gfw,国外网站
  - GEOIP,LAN,DIRECT,no-resolve
  - GEOIP,CN,DIRECT,no-resolve
  - GEOSITE,CN,DIRECT,no-resolve
  - MATCH,兜底分流
